{"version":3,"sources":["components/Menu.js","components/Header.js","components/ContactList.js","components/Sidebar.js","components/EmojiPicker.js","components/ChatView.js","components/ConHeader.js","components/InputArea.js","components/Conversation.js","components/Dashboard.js","components/MainContainer.js","components/LoginOrSignup.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","menuOptions","setShowMenu","node","useRef","useEffect","document","addEventListener","handleClick","removeEventListener","e","current","contains","target","style","position","ref","className","map","item","index","onClick","title","Header","setToken","currentUser","useState","showMenu","username","background","xmlns","viewBox","width","height","fill","d","ContactList","suggestedUsers","setSelectedUser","selectedUser","backgroundColor","_id","Sidebar","ENDPOINT","token","setSuggestedUsers","axios","get","headers","then","res","status","Array","isArray","data","filter","user","EmojiPicker","showEmoji","setChosenEmoji","setShowEmoji","onEmojiClick","event","emojiObject","skinTone","SKIN_TONE_NEUTRAL","pickerStyle","bottom","right","maxWidth","disableAutoFocus","disableSkinTonePicker","ChatView","chatList","setChatList","isScrolledToBottom","setIsScrolledToBottom","scrollStatusRef","scrollToBottomBtnRef","chatGroup","onScroll","scrollTop","offsetHeight","scrollHeight","dangerouslySetInnerHTML","__html","message","from","marginLeft","borderRadius","scrollIntoView","behavior","transform","display","flex","alignItems","overflow","ConHeader","styles","headerName","InputArea","socket","chosenEmoji","messageRef","showPlaceholder","setShowPlaceholder","savedSelection","setSavedSelection","insertTextAtCursor","emoji","inputArea","placeholder","inputBox","onKeyUp","key","shiftKey","textContent","msg","innerHTML","to","timestamp","Date","now","emit","chats","onKeyPress","preventDefault","contentEditable","onBlur","window","getSelection","sel","getRangeAt","rangeCount","selection","createRange","saveSelection","focus","range","removeAllRanges","addRange","select","restoreSelection","minHeight","margin","outline","padding","fontSize","fontWeight","maxHeight","overflowY","color","pointerEvents","Conversation","Dashboard","MainContainer","_setSelectedUser","selectedUserRef","on","console","log","previousChat","userId","selector","post","messages","length","querySelector","value","LoginOrSignup","type","setType","setUsername","password","setPassword","usernameError","setUsernameError","passwordError","setPasswordError","dataError","setDataError","usernameRegex","updateType","name","onChange","maxLength","errorDisplayed","test","catch","err","response","App","loggedIn","setLoggedIn","localStorage","getItem","setCurrentUser","setItem","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","io","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b79bb14b.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport default function Menu({ menuOptions, setShowMenu }) {\n  const node = useRef();\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => document.removeEventListener(\"click\", handleClick);\n  }, []);\n\n  const handleClick = (e) => {\n    if (node.current && node.current.contains(e.target)) {\n      // inside click\n      return;\n    }\n    // outside click\n    setShowMenu(false);\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div ref={node} className=\"menu-div\">\n        {menuOptions.map((item, index) => {\n          return <div key={index} onClick={item.onClick}>{item.title}</div>;\n        })}\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport Menu from \"./Menu\";\n\nexport default function Header({ setToken, currentUser }) {\n  const menuOptions = [\n    {\n      title: \"Logout\",\n      onClick: () => {\n        setToken(null);\n      },\n    },\n  ];\n\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <div className=\"header-options\">\n      <div className=\"userHeader\">\n        <span className=\"userIcon\">{currentUser.username[0]}</span>\n        <span>{currentUser.username}</span>\n      </div>\n      <div>\n        <div\n          style={showMenu ? { background: \"rgba(0,0,0,.1)\" } : {}}\n          onClick={() => setShowMenu(!showMenu)}\n          className=\"option-svg\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            width=\"24\"\n            height=\"24\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M12 7a2 2 0 1 0-.001-4.001A2 2 0 0 0 12 7zm0 2a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 9zm0 6a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 15z\"\n            ></path>\n          </svg>\n        </div>\n\n        {showMenu ? (\n          <Menu setShowMenu={setShowMenu} menuOptions={menuOptions} />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","export default function ContactList({\n  suggestedUsers,\n  setSelectedUser,\n  selectedUser,\n}) {\n  return (\n    <div className=\"contactList\">\n      <div className=\"suggestedText\">Suggested Users</div>\n      {suggestedUsers.map((item) => (\n        <li\n          style={{\n            backgroundColor: item._id === selectedUser._id ? \"#eee\" : \"\",\n          }}\n          onClick={() => setSelectedUser(item)}\n          className=\"eachContact\"\n          key={item._id}\n        >\n          {\" \"}\n          <span className=\"userIcon\" style={{ background: \"#6865c9\" }}>\n            {item.username[0]}\n          </span>\n          <div className=\"each-contact\">\n            <span>{item.username}</span>\n          </div>\n        </li>\n      ))}\n    </div>\n  );\n}\n","import Header from \"./Header\";\nimport ContactList from \"./ContactList\";\nimport \"../App.css\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function Sidebar({\n  setToken,\n  ENDPOINT,\n  currentUser,\n  setSelectedUser,\n  selectedUser,\n  token\n}) {\n  const [suggestedUsers, setSuggestedUsers] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`${ENDPOINT}/user/getUsers`, {\n        headers: { \"x-auth-token\": token },\n      })\n      .then((res) => {\n        if (res.status === 200) {\n          setSuggestedUsers(Array.isArray(res.data) ? res.data : []);\n        }\n      });\n  }, [ENDPOINT]);\n\n  return (\n    <div className=\"sidebar\">\n      <Header currentUser={currentUser} setToken={setToken} />\n      <ContactList\n        selectedUser={selectedUser}\n        setSelectedUser={setSelectedUser}\n        suggestedUsers={suggestedUsers.filter(\n          (user) => user._id != currentUser._id\n        )}\n      />\n    </div>\n  );\n}\n","import Picker, { SKIN_TONE_NEUTRAL } from \"emoji-picker-react\";\nimport { useState, useRef, useEffect } from \"react\";\n\nexport default function EmojiPicker({\n  showEmoji,\n  setChosenEmoji,\n  setShowEmoji,\n}) {\n  const node = useRef();\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => document.removeEventListener(\"click\", handleClick);\n  }, []);\n\n  const handleClick = (e) => {\n    if (node.current && node.current.contains(e.target)) {\n      // inside click\n      return;\n    }\n    // outside click\n    setShowEmoji(false);\n  };\n\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n  };\n\n  return (\n    <div ref={node}>\n      <Picker\n        onEmojiClick={onEmojiClick}\n        skinTone={SKIN_TONE_NEUTRAL}\n        pickerStyle={{\n          position: \"absolute\",\n          bottom: \"10px\",\n          right: \"10px\",\n          maxWidth: \"90%\",\n        }}\n        disableAutoFocus={true}\n        disableSkinTonePicker={true}\n      />\n    </div>\n  );\n}\n\n\n","import { useRef, useState } from \"react\";\nimport EmojiPicker from \"./EmojiPicker\";\n\nexport default function ChatView({\n  chatList,\n  selectedUser,\n  setChatList,\n  showEmoji,\n  setShowEmoji,\n  setChosenEmoji,\n}) {\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n  const scrollStatusRef = useRef();\n  const scrollToBottomBtnRef = useRef();\n\n  const handleScroll = () => {\n    return scrollStatusRef.current\n      ? setIsScrolledToBottom(\n          scrollStatusRef.current.scrollTop +\n            scrollStatusRef.current.offsetHeight >=\n            scrollStatusRef.current.scrollHeight\n        )\n      : null;\n  };\n\n  const scrollToBottom = () =>\n    scrollToBottomBtnRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n  return (\n    <div style={{ ...style.chatGroup }}>\n      <div\n        ref={scrollStatusRef}\n        onScroll={handleScroll}\n        className=\"chatContainer\"\n      >\n        {chatList.map((item, index) => (\n          <div\n            dangerouslySetInnerHTML={{ __html: item.message }}\n            className=\"eachChat\"\n            key={index}\n            style={\n              item.from !== selectedUser._id\n                ? { marginLeft: \"auto\", borderRadius: \"10px 10px 0\" }\n                : {}\n            }\n          ></div>\n        ))}\n        <div ref={scrollToBottomBtnRef} className=\"scroll-into-view\"></div>\n      </div>\n      <div\n        onClick={scrollToBottom}\n        style={{\n          transform: isScrolledToBottom ? \"scale(0.0004)\" : \"rotate(90deg)\",\n        }}\n        className=\"scrollDiv\"\n      ></div>\n      {showEmoji ? (\n        <EmojiPicker\n          setChosenEmoji={setChosenEmoji}\n          showEmoji={showEmoji}\n          setShowEmoji={setShowEmoji}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nconst style = {\n  chatGroup: {\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"flex-end\",\n    overflow: \"auto\",\n    position: \"relative\",\n  },\n};\n\nconst scrollToElement = (elementExists, scrollDuration = 100) => {\n  if (elementExists && elementExists.getBoundingClientRect) {\n    const rect = elementExists.getBoundingClientRect();\n    const elementTop = rect.top + window.scrollY; // a bit of space from top\n    var cosParameter = (window.scrollY - elementTop) / 2,\n      scrollCount = 0,\n      oldTimestamp = performance.now();\n    function step(newTimestamp) {\n      // console.log(scrollCount);\n      scrollCount += Math.PI / (scrollDuration / (newTimestamp - oldTimestamp));\n      if (scrollCount >= Math.PI) {\n        window.scrollTo(0, elementTop);\n        return;\n      }\n      window.scrollTo(\n        0,\n        Math.round(cosParameter + cosParameter * Math.cos(scrollCount)) +\n          elementTop\n      );\n      oldTimestamp = newTimestamp;\n      window.requestAnimationFrame(step);\n    }\n    window.requestAnimationFrame(step);\n  }\n};\n","export default function ConHeader({ selectedUser }) {\n  return (\n    <div className=\"conversation-header\">\n      <div style={styles.headerName}>\n        <span className=\"userIcon\">{selectedUser.username[0]}</span>\n        <span>{selectedUser.username}</span>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  headerName: { display: \"flex\", height: \"100%\", alignItems: \"center\" },\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport insertTextAtCursor from \"insert-text-at-cursor\";\n\nexport default function InputArea({\n  socket,\n  setChatList,\n  chatList,\n  currentUser,\n  selectedUser,\n  showEmoji,\n  setShowEmoji,\n  chosenEmoji,\n}) {\n  const messageRef = useRef();\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  const [savedSelection, setSavedSelection] = useState(null);\n\n  useEffect(() => {\n    if (chosenEmoji != null) {\n      insertTextAtCursor(messageRef.current, chosenEmoji.emoji);\n      setShowPlaceholder(false);\n    }\n  }, [chosenEmoji]);\n\n  const checkMessage = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n    }\n  };\n\n  const getMessage = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      if (!messageRef.current.textContent) return;\n      const message = messageRef.current.innerHTML;\n      const msg = {\n        message,\n        from: currentUser._id,\n        to: selectedUser._id,\n        timestamp: Date.now(),\n      };\n      socket.emit(\"sendMessage\", msg);\n      setChatList((chats) => [...chats, msg]);\n      messageRef.current.innerHTML = \"\";\n      setShowEmoji(false);\n    }\n\n    setShowPlaceholder(messageRef.current.textContent === \"\" || !messageRef.current.textContent);\n  };\n\n  const handleEmojiSelection = () => {\n    messageRef.current.focus();\n    restoreSelection(savedSelection);\n    setShowEmoji(!showEmoji);\n  };\n\n  return (\n    <div style={{ ...style.inputArea }}>\n      {showPlaceholder ? (\n        <div style={{ ...style.placeholder }}>Enter a message</div>\n      ) : null}\n      <div\n        ref={messageRef}\n        style={{\n          ...style.inputBox,\n        }}\n        onKeyUp={getMessage}\n        onKeyPress={checkMessage}\n        contentEditable\n        onBlur={(e) => setSavedSelection(saveSelection())}\n      ></div>\n      <div onClick={handleEmojiSelection} className=\"emojiDiv\"></div>\n    </div>\n  );\n}\n\nconst style = {\n  inputArea: {\n    display: \"flex\",\n    // height: \"60px\",\n    alignItems: \"center\",\n    background: \"#ddd\",\n  },\n  inputBox: {\n    background: \"#fff\",\n    minHeight: \"40px\",\n    flex: 1,\n    margin: \"10px 3px\",\n    outline: \"none\",\n    padding: \"7px 20px\",\n    // display: \"flex\",\n    alignItems: \"center\",\n    borderRadius: \"30px\",\n    fontSize: \"20px\",\n    fontWeight: \"300\",\n    maxHeight: \"30vh\",\n    overflowY: \"auto\",\n  },\n  placeholder: {\n    position: \"absolute\",\n    fontWeight: \"300\",\n    color: \"#888\",\n    margin: \"0 23px\",\n    pointerEvents: \"none\",\n  },\n};\n\n// Restores the cursor position in the textbox\nfunction restoreSelection(range) {\n  if (range) {\n    if (window.getSelection) {\n      let sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (document.selection && range.select) {\n      range.select();\n    }\n  }\n}\n\n// Returns cursor position in the text box\nfunction saveSelection() {\n  if (window.getSelection) {\n    let sel = window.getSelection();\n    if (sel.getRangeAt && sel.rangeCount) {\n      return sel.getRangeAt(0);\n    }\n  } else if (document.selection && document.selection.createRange) {\n    return document.selection.createRange();\n  }\n  return null;\n}\n","// import { useState } from \"react\";\nimport { useState } from \"react\";\nimport ChatView from \"./ChatView\";\nimport ConHeader from \"./ConHeader\";\nimport InputArea from \"./InputArea\";\n\nexport default function Conversation({\n  selectedUser,\n  socket,\n  setChatList,\n  chatList,\n  currentUser,\n}) {\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n  const [showEmoji, setShowEmoji] = useState(false);\n  return (\n    <div className=\"conversation\">\n      <ConHeader selectedUser={selectedUser} />\n      <ChatView\n        chatList={chatList}\n        selectedUser={selectedUser}\n        setChatList={setChatList}\n        showEmoji={showEmoji}\n        setShowEmoji={setShowEmoji}\n        setChosenEmoji={setChosenEmoji}\n      />\n      <InputArea\n        selectedUser={selectedUser}\n        currentUser={currentUser}\n        chatList={chatList}\n        setChatList={setChatList}\n        socket={socket}\n        setShowEmoji={setShowEmoji}\n        showEmoji={showEmoji}\n        chosenEmoji={chosenEmoji}\n      />\n    </div>\n  );\n}\n","import Conversation from \"./Conversation\";\n\nexport default function Dashboard({\n  selectedUser,\n  socket,\n  setChatList,\n  chatList,\n  currentUser,\n}) {\n  return (\n    <div className=\"dashboard\">\n      {selectedUser !== false ? (\n        <Conversation\n          currentUser={currentUser}\n          chatList={chatList}\n          setChatList={setChatList}\n          socket={socket}\n          selectedUser={selectedUser}\n        />\n      ) : (\n        <p className=\"helper-text\">\n          Select a contact from left to start a conversation\n        </p>\n      )}\n    </div>\n  );\n}\n","import Sidebar from \"./Sidebar\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport \"../App.css\";\nimport axios from \"axios\";\n\nexport default function MainContainer({\n  setToken,\n  ENDPOINT,\n  currentUser,\n  socket,\n  token,\n}) {\n  const [chatList, setChatList] = useState([]);\n  const [selectedUser, _setSelectedUser] = useState(false);\n  const selectedUserRef = useRef(selectedUser);\n  const setSelectedUser = (value) => {\n    selectedUserRef.current = value; // Use this in events to access latest value\n    _setSelectedUser(value);\n  };\n\n  useEffect(() => {\n    socket.on(\"notifyUser\", (data) => {\n      console.log(data);\n    });\n\n    socket.on(\"getMessage\", (data) => {\n      // console.log(data);\n\n      selectedUserRef.current && data.from == selectedUserRef.current._id\n        ? setChatList((previousChat) => [...previousChat, data])\n        : console.log(\"data from:\", data.from);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser !== false) {\n      socket.emit(\"selectUser\", {\n        userId: selectedUser._id,\n        username: selectedUser.username,\n        selector: currentUser\n      });\n\n      axios\n        .post(\n          `${ENDPOINT}/message/getMessages`,\n          { selectedUser: selectedUser._id },\n          {\n            headers: { \"x-auth-token\": token },\n          }\n        )\n        .then((messages) => {\n          console.log(messages.data);\n          if (Array.isArray(messages.data)) {\n            setChatList(messages.data);\n          }\n        });\n    }\n  }, [selectedUser]);\n\n  useEffect(() => {\n    if (selectedUser !== false && chatList.length > 0) {\n      document.querySelector(\".scroll-into-view\").scrollIntoView();\n    }\n  }, [chatList, selectedUser]);\n\n  return (\n    <div className=\"mainContainer\">\n      <Sidebar\n        setSelectedUser={setSelectedUser}\n        currentUser={currentUser}\n        ENDPOINT={ENDPOINT}\n        setToken={setToken}\n        selectedUser={selectedUser}\n        token={token}\n      />\n      <Dashboard\n        currentUser={currentUser}\n        chatList={chatList}\n        setChatList={setChatList}\n        socket={socket}\n        selectedUser={selectedUser}\n      />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function LoginOrSignup({ type, setType, setToken, ENDPOINT }) {\n  // states\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [dataError, setDataError] = useState(\"\");\n\n  // constant\n  const usernameRegex = /^[a-zA-Z_]{1}[a-zA-Z0-9_]{0,14}$/;\n\n  // functions\n  const validateData = () => {\n    let errorDisplayed = false;\n    setDataError(\"\");\n    if (username.length > 0 && usernameRegex.test(username)) {\n      setUsernameError(\"\");\n    } else {\n      setUsernameError(\n        \"A username can only contain letters, numbers and underscore (_). First character must be a letter.\"\n      );\n      errorDisplayed = true;\n    }\n\n    if (password.length >= 6) {\n      setPasswordError(\"\");\n    } else {\n      setPasswordError(\"Password must be at least 6 characters\");\n      errorDisplayed = true;\n    }\n\n    if (errorDisplayed) {\n      return 0;\n    }\n\n    console.log(`${username} and ${password} are valid`);\n\n    const data = {\n      username,\n      password,\n    };\n\n    if (type === \"login\") {\n      axios\n        .post(`${ENDPOINT}/user/login`, data)\n        .then((res) => {\n          if (res.status === 200) {\n            setToken(res.data.token);\n          }\n        })\n        .catch((err) => {\n          if (err.response.data) {\n            if (err.response.data.status === 0) {\n              setUsernameError(\"User does not exist.\");\n            } else if (err.response.data.status === 2) {\n              setDataError(\"Invalid credentials\");\n            }\n          }\n        });\n    } else {\n      axios\n        .post(`${ENDPOINT}/user/register`, data)\n        .then((res) => {\n          if (res.status === 201) {\n            setToken(res.data.token);\n          }\n        })\n        .catch((err) => {\n          setUsernameError(err.response.data.msg);\n        });\n    }\n  };\n\n  const updateType = (value) => {\n    setPasswordError(\"\");\n    setPassword(\"\");\n    setUsernameError(\"\");\n    setUsername(\"\");\n    setType(value);\n  };\n\n  // JSX\n  return (\n    <div className=\"login\">\n      <div className=\"login-header\">\n        {type === \"login\" ? \"Login\" : \"Signup\"}\n      </div>\n      <span className=\"label\">User name:</span>\n      <input\n        name=\"username\"\n        value={username}\n        placeholder=\"Enter a username\"\n        onChange={(e) => setUsername(e.target.value)}\n        type=\"username\"\n        maxLength=\"15\"\n      />\n      <div className=\"error\">\n        <span>{usernameError}</span>\n      </div>\n      <span className=\"label\">Password:</span>\n      <input\n        name=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Enter password\"\n        type=\"password\"\n      />\n      <div className=\"error\">\n        <span>{passwordError}</span>\n      </div>\n      <div onClick={validateData} className=\"button\">\n        Submit\n      </div>\n      <div className=\"error\">\n        <span>{dataError}</span>\n      </div>\n      {type === \"login\" ? (\n        <p>\n          Don't have an account?{\" \"}\n          <span className=\"change-type\" onClick={() => updateType(\"signup\")}>\n            Signup\n          </span>\n        </p>\n      ) : (\n        <p>\n          Already have an account?{\" \"}\n          <span className=\"change-type\" onClick={() => updateType(\"login\")}>\n            Login\n          </span>\n        </p>\n      )}\n    </div>\n  );\n}\n","import \"./App.css\";\nimport MainContainer from \"./components/MainContainer\";\nimport { useEffect, useState } from \"react\";\nimport LoginOrSignup from \"./components/LoginOrSignup\";\nimport axios from \"axios\";\n\nfunction App({socket, ENDPOINT}) {\n  const [loggedIn, setLoggedIn] = useState(\"login\");\n\n  const [token, setToken] = useState(localStorage.getItem(\"whisper-token\"));\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    if (token != null) {\n      localStorage.setItem(\"whisper-token\", token);\n      // Get user data\n      axios\n        .get(`${ENDPOINT}/user/getCurrentUser`, {\n          headers: { \"x-auth-token\": token },\n        })\n        .then((res) => {\n          console.log(res.data);\n          setCurrentUser(res.data.user);\n        })\n        .catch((err) => {\n          setToken(null);\n        });\n    } else {\n      localStorage.removeItem(\"whisper-token\");\n      setLoggedIn(\"login\");\n    }\n  }, [token, ENDPOINT]);\n\n  useEffect(() => {\n    if (currentUser.username) {\n      setLoggedIn(\"dashboard\");\n      socket.emit(\"login\", currentUser)\n    }\n  }, [currentUser, socket]);\n\n  return (\n    <div className=\"top-container\">\n      {loggedIn === \"dashboard\" ? (\n        <MainContainer\n          currentUser={currentUser}\n          ENDPOINT={ENDPOINT}\n          setToken={setToken}\n          socket={socket}\n          token={token}\n        />\n      ) : (\n        <LoginOrSignup\n          ENDPOINT={ENDPOINT}\n          setToken={setToken}\n          type={loggedIn}\n          setType={setLoggedIn}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { io } from \"socket.io-client\";\n\n// Global values\nconst ENDPOINT = \"https://decisive-honeysuckle-atrociraptor.glitch.me\";\nconst socket = io(ENDPOINT);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App socket={socket} ENDPOINT={ENDPOINT} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}